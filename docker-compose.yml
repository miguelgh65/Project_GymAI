services:
  gym-postgres:
    image: postgres:latest
    container_name: gym-postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Montamos todos los scripts en el directorio de inicializaciÃ³n
      - ./init-scripts/01-schemas.sql:/docker-entrypoint-initdb.d/01-schemas.sql
      - ./init-scripts/02-users.sql:/docker-entrypoint-initdb.d/02-users.sql
      - ./init-scripts/03-gym.sql:/docker-entrypoint-initdb.d/03-gym.sql
      - ./init-scripts/04-nutrition.sql:/docker-entrypoint-initdb.d/04-nutrition.sql
      - ./init-scripts/05-config.sql:/docker-entrypoint-initdb.d/05-config.sql
      - ./init-scripts/06-indexes.sql:/docker-entrypoint-initdb.d/06-indexes.sql
    ports:
      - "5438:5432" # Puerto externo:interno
    restart: unless-stopped
    networks:
      - gymnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  gym-fastapi-backend:
    container_name: gym-fastapi-backend
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@gym-postgres:5432/${DB_NAME}
      - PYTHONPATH=/app
      - TZ=Europe/Madrid
      - API_BASE_URL=http://localhost:5050
      - SECRET_KEY=${SECRET_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FITBIT_CLIENT_ID=${FITBIT_CLIENT_ID}
      - FITBIT_CLIENT_SECRET=${FITBIT_CLIENT_SECRET}
      - FITBIT_REDIRECT_URI=${FITBIT_REDIRECT_URI}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VERTEX_AI_PROJECT_ID=${VERTEX_AI_PROJECT_ID}
      - VERTEX_AI_LOCATION=${VERTEX_AI_LOCATION}
    volumes:
      - ./:/app
    ports:
      - "5050:5050"
    depends_on:
      gym-postgres:
        condition: service_healthy
    restart: unless-stopped
    working_dir: /app
    command: sh -c "/app/start.sh"
    networks:
      - gymnet
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:5050/docs > /dev/null || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  gym-react-frontend:
    container_name: gym-react-frontend
    build:
      context: ./front_end_react
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./front_end_react:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}
      - REACT_APP_PROJECT_NAME=${REACT_APP_PROJECT_NAME}
      - REACT_APP_GOOGLE_CLIENT_ID=${REACT_APP_GOOGLE_CLIENT_ID}
    depends_on:
      - gym-fastapi-backend
    restart: unless-stopped
    networks:
      - gymnet

networks:
  gymnet:
    driver: bridge

volumes:
  postgres_data: {}
